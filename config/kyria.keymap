/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_es.h"

#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h> 

/ {
    keymap {
        compatible = "zmk,keymap";

// ---------------------------------------------------------------------------------------------------------------------------------
        default_layer {
        //   ___________________________________                             ___________________________________
        // || ESC |  Q  |  W  |  E  |  R  |  T  ||                         ||  Y  |  U  |  I  |  O  |  P  |BSPC ||
        // || TAB |  A  |  S  |  D  |  F  |  G  ||__________     __________||  H  |  J  |  K  |  L  |  Ñ  | RET ||
        // ||SHIFT|  Z  |  X  |  C  |  V  |  B  |     |     || ||     |     |  N  |  M  | , ; | . : | - _ |SHIFT||
        //   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾||     | GUI |CTRL |SPACE| LY1 || || LY2 |SPACE| ALT | LY3 |     ||‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
        //                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
            bindings = <
                &kp ESC   &kp Q &kp W &kp E &kp R    &kp T                                          &kp Y    &kp U &kp I        &kp O      &kp P          &kp BSPC
                &kp TAB   &kp A &mt LALT S &mt  LSHFT D &mt LCTRL F &kp G                           &kp H &mt LCTRL J &mt LSHFT K &mt LALT L &mt LGUI ES_N_TILDE &kp RET
                &kp LSHFT &kp Z &kp X &kp C &kp V    &kp B     &none     &none      &none &none     &kp N    &kp M &kp ES_COMMA &kp ES_DOT &kp ES_MINUS   &kp RSHFT
                                      &none &kp LGUI &kp LCTRL &kp SPACE &mo 1      &mo 2 &kp SPACE &kp LALT &mo 3 &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

// ---------------------------------------------------------------------------------------------------------------------------------
        symbol_layer {
        //   ___________________________________                             ___________________________________
        // ||  º  |  !  |  @  |  #  |  $  |  %  ||                         ||  /  |  (  |  )  |  =  |  ?  |  ▼  |
        // ||  ª  |  ¡  |  `  |  "  |  '  |  &  ||__________     __________||  \  |  {  |  }  |  ^  |  ¿  |  ¨  |
        // ||  ▼  |  .  |  ´  |  <  |  >  |  |  |     |     || ||     |     |  Ç  |  [  |  ]  |  ~  |  ¬  |  ▼  |
        //   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  || ||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  ||‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
        //                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
            bindings = <
                &kp ES_ORDM &kp ES_EXCL &kp ES_AT &kp ES_HASH &kp ES_DLLR &kp ES_PRCNT                        &kp ES_FSLH &kp ES_LPAR &kp ES_RPAR &kp ES_EQUAL &kp ES_QMARK &trans
                &kp ES_ORDF &kp EQUAL &kp ES_GRAVE &kp ES_DQT &kp ES_SQT &kp ES_AMPS                       &kp ES_BSLH &kp RA(SQT) &kp RA(BSLH)  &kp ES_CARET &kp ES_IQMARK &kp ES_UMLAUT
                &trans &kp ES_MDOT &kp ES_ACUTE &kp ES_LT &kp ES_GT &kp ES_PIPE &none &none        &none &none &kp BSLH &kp RA(LBKT) &kp RA(RBKT) &kp ES_TILDE &kp ES_NOT &trans
                                        &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans
            >;

        };
// ---------------------------------------------------------------------------------------------------------------------------------
        number_layer {
        //   ___________________________________                             ___________________________________
        // ||  ▼  |     |HOME |  ↑  | END |     ||                         ||  *  |  7  |  8  |  9  |     |N_LCK||
        // ||  ▼  |     |  ←  |  ↓  |  →  |     ||__________     __________||  +  |  4  |  5  |  6  |     |     ||
        // ||  ▼  |     |     |     |     |     |     |     || ||     |     |  0  |  1  |  2  |  3  |  .  |  ,  ||
        //   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  || ||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  ||‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
        //                      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
            bindings = <
                &trans &none    &kp HOME &kp UP   &kp END   &none                                  &kp ES_STAR &kp KP_N7 &kp KP_N8 &kp KP_N9 &none &kp KP_NUM
                &trans &none    &kp LEFT &kp DOWN &kp RIGHT &none                                  &kp ES_PLUS &mt LCTRL KP_N4 &mt LSHFT KP_N5 &mt LALT KP_N6 &none &none
                &trans &none    &none    &none    &none     &none  &none  &none      &none  &none  &kp KP_N0   &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp ES_DOT &kp ES_COMMA
                                         &trans   &trans    &trans &trans &trans     &trans &trans &trans      &trans    &trans
            >;

        };
// ---------------------------------------------------------------------------------------------------------------------------------
        function_layer {
        //   ___________________________________                             ___________________________________
        // || BLE | BT0 | BT1 | BT2 | BT3 | BT4 ||                         ||     |     |     |     |     |     ||
        // || USB | F1  | F2  | F3  | F4  | F5  ||__________     __________|| F6  | F7  | F8  | F9  | F10 |     ||
        // || PWR | F11 |     |BTCLR| RST |     |     |     || ||     |     |     |     |     |     | F12 |     ||
        //   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  || ||  ▼  |  ▼  |  ▼  |  ▼  |  ▼  ||‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
        //                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
            bindings = <
                &out OUT_BLE &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                              &none  &none  &none  &none  &none   &kp DEL 
                &out OUT_USB &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                                    &kp 6  &kp F7 &kp F8 &kp F9 &kp F10 &kp PSCRN
           &ext_power EP_TOG &kp F11      &none        &bt BT_CLR   &bootloader  &none       &none  &none    &none  &none  &none  &none  &none  &none  &kp F12 &none
                                                       &trans       &trans       &trans      &trans &trans   &trans &trans &trans &trans &trans
            >;
        };
    };
};
